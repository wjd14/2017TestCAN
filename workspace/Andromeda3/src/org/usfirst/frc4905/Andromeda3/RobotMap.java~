// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4905.Andromeda3;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.Ultrasonic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainRightController;
    public static SpeedController driveTrainLeftController;
    public static RobotDrive driveTrainRobotDrive2;
    public static Encoder driveTrainRightQuadrature;
    public static Encoder driveTrainLeftQuadrature;
    public static Ultrasonic driveTrainUltrasonic;
    public static SpeedController boulderHandlerBoulderHandlerController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainRightController = new TalonSRX(0);
        LiveWindow.addActuator("DriveTrain", "RightController", (TalonSRX) driveTrainRightController);
        
        driveTrainLeftController = new TalonSRX(1);
        LiveWindow.addActuator("DriveTrain", "LeftController", (TalonSRX) driveTrainLeftController);
        
        driveTrainRobotDrive2 = new RobotDrive(driveTrainLeftController, driveTrainRightController);
        
        driveTrainRobotDrive2.setSafetyEnabled(true);
        driveTrainRobotDrive2.setExpiration(0.1);
        driveTrainRobotDrive2.setSensitivity(0.5);
        driveTrainRobotDrive2.setMaxOutput(1.0);

        driveTrainRightQuadrature = new Encoder(0, 1, false, EncodingType.k1X);
        LiveWindow.addSensor("DriveTrain", "RightQuadrature", driveTrainRightQuadrature);
        driveTrainRightQuadrature.setDistancePerPulse(1.0);
        driveTrainRightQuadrature.setPIDSourceType(PIDSourceType.kRate);
        driveTrainLeftQuadrature = new Encoder(2, 3, false, EncodingType.k1X);
        LiveWindow.addSensor("DriveTrain", "LeftQuadrature", driveTrainLeftQuadrature);
        driveTrainLeftQuadrature.setDistancePerPulse(1.0);
        driveTrainLeftQuadrature.setPIDSourceType(PIDSourceType.kRate);
        driveTrainUltrasonic = new Ultrasonic(4, 5);
        LiveWindow.addSensor("DriveTrain", "Ultrasonic", driveTrainUltrasonic);
        
        boulderHandlerBoulderHandlerController = new TalonSRX(2);
        LiveWindow.addActuator("BoulderHandler", "BoulderHandlerController", (TalonSRX) boulderHandlerBoulderHandlerController);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
